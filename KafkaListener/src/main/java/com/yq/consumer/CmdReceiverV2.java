package com.yq.consumer;import lombok.extern.slf4j.Slf4j;import org.apache.kafka.clients.consumer.ConsumerRecord;import org.springframework.kafka.annotation.KafkaListener;import org.springframework.stereotype.Component;import java.util.Optional;/** * Created by yqbjtu on 2018/4/22. */@Component@Slf4jpublic class CmdReceiverV2 {    @KafkaListener(topicPattern = "yq.topic1", groupId = "group1")   //@KafkaListener(topicPattern = "message.devicealarm1", groupId = "group2")    public void listen(ConsumerRecord<?, ?> record) {         log.info("StartThreadName:" + Thread.currentThread().getName() + " :" + System.currentTimeMillis());        Optional<?> kafkaMessage = Optional.ofNullable(record.value());//        if (kafkaMessage.isPresent()) {//            Object message = kafkaMessage.get();//            log.info("------------------ 2messageDev =" + message);//        }       log.info("------------------ 3messageDev =" + record);        //log.info("EndThreadName:" + Thread.currentThread().getName() + " :" + System.currentTimeMillis());    }}